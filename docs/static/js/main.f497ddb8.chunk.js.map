{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGift.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,0BAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAU,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAqBO,OACxCN,EAAc,OAOd,2BACAO,KAAK,OACLC,MAAUT,EACVU,SAlBkB,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaXM,GAbW,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,+BAAMA,EAAN,OCHCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAW,WACPxB,EAASC,GAAWwB,MAAM,SAAAC,GACtBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAAEpB,IAEEqB,EDZ0BK,CAAc1B,GAAlCa,EAFwB,EAE7BN,KAAaa,EAFgB,EAEhBA,QAMrB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAqDhB,EAArD,KACEoB,GAAW,uBAAGJ,UAAU,oCAAb,WACb,yBAAKA,UAAU,aACNH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACLD,UEhBpBkB,EAAe,WAAO,IAAD,EACM1C,mBAAS,CAAC,WADhB,mBACvB2C,EADuB,KACXC,EADW,KAQ9B,OACI,oCACI,4CAGA,kBAAC,EAAD,CAAa7C,cAAgB6C,IAC7B,6BACA,4BAEQD,EAAWpB,KAAK,SAAAT,GAChB,OAAO,kBAAC,EAAD,CACC2B,IAAM3B,EACNA,SAAWA,U,MCjBvC+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.f497ddb8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n    const [InputValue, setInputValue] = useState(\"\");\n\n    const handleInputChange = ( e ) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n        if(InputValue.trim().length >  2 ){\n            setCategories( cats => [InputValue , ...cats]);\n            setInputValue('');\n        }\n        \n    }\n    \n    return (\n        <form onSubmit={ handleSubmit }>\n            <input \n            type=\"text\"\n            value = { InputValue }\n            onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes ={\n    setCategories: PropTypes.func.isRequired,\n}","export const getGifs = async( category ) =>{\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=Vl93W5bS5sbzHO8wz9UCX4CqVHLmpYcv`\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n    })\n    //console.log(gifs);\n    return  gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n    //console.log({id, title, url})\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGift';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n    // const [Images, setImages] = useState([])\n    const { data:images, loading } = useFetchGifs( category );\n    // useEffect( () => {\n    //     getGifs( category ).then( setImages );\n    // }, [ category ])\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__bounce\"> { category } </h3>\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n            <div className=\"card-grid\">\n                    {images.map( img => (\n                        <GifGridItem\n                            key={ img.id }\n                            { ...img }\n                        />\n                    ))}\n            </div>\n        </>\n        \n    )\n}\n","import { useEffect, useState } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setstate] = useState({\n        data:[],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category ).then( imgs => {\n            setstate({\n                data: imgs,\n                loading: false\n            })\n        });\n    }, [ category ]);\n\n    return state;\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    const [categories, setcategories] = useState(['Futbol'])\n\n    // const handleApp = () => {\n    //     setcategories(\n    //         [...categories, 'Pruebita']\n    //     )\n    // }\n    return ( \n        <>\n            <h2>\n                GifExpertApp\n            </h2>\n            <AddCategory setCategories={ setcategories }/>\n            <hr/>\n            <ol>\n                {\n                    categories.map( category => {\n                    return <GifGrid \n                            key={ category }\n                            category={ category }/>\n                    })\n                }\n            </ol>\n        </>\n     );\n}\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}